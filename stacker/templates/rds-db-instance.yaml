---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an Amazon Relational Database Service
  (Amazon RDS) DB instance'


Parameters:

  AllocatedStorage:
    Description: 'Allocated storage size (GiB) for the RDS DB instance(s)'
    MaxValue: '16384'
    MinValue: '20'
    Type: Number

  AllowMajorVersionUpgrade:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Enable automatic major version upgrades - true or false'
    Type: String

  Application:
    Description: 'Name of application for which database will be used'
    Type: String

  AutoMinorVersionUpgrade:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: 'Enable automatic minor version upgrades - true or false'
    Type: String

  BackupRetentionPeriod:
    Default: 7
    Description: 'Number of days to retain backups (1-35)'
    MaxValue: 35
    MinValue: 1
    Type: Number

  DBInstanceClass:
    Default: db.t2.micro
    Description: 'Instance type to use for the DB instance'
    Type: String

  DBInstanceIdentifier:
    Description: 'A name for the DB instance'
    Type: String

  DBParameterGroupName:
    Description: 'Name of an existing DB parameter group name to use'
    Type: String

  DBSnapshotIdentifier:
    Default: undefined
    Description: 'ARN of DB instance snapshot to restore/create
      DB instance from'
    Type: String

  DBSubnetGroupName:
    Description: 'DB Subnet Group'
    Type: String

  Engine:
    Description: 'The type of database engine to use'
    Type: String

  EngineVersion:
    Description: 'The version number of the database engine to use'
    Type: String

  Environment:
    Default: Dev
    Description: 'Name of Environment'
    Type: String

  Iops:
    Default: 0
    Description: 'The number of I/O operations per second (IOPS) that
      the database provisions. The value must be equal to or greater
      than 1000 (optional)'
    Type: Number

  KmsKeyId:
    Default: ''
    Description: 'ARN for the AWS Key Management Service (KMS) key -
      Blank uses an AWS managed KMS key or none if encryption not enabled'
    Type: String

  LicenseModel:
    Description: 'License model information for this RDS DB instance'
    Type: String

  MasterUserPassword:
    Description: 'Password for the administrative user'
    NoEcho: true
    Type: String

  MasterUsername:
    Description: 'The master user name for the DB instance'
    Type: String

  MultiAZ:
    AllowedValues: ['true', 'false']
    Description: 'Enable MultiAZ (Mirroring) - true or false'
    Type: String

  Port:
    Description: 'The port for the instance'
    Type: String

  PreferredBackupWindow:
    Description: 'Daily time range during which automated backups are created if
      automated backups are enabled, using the BackupRetentionPeriod parameter.
      Format hh:mm-hh:mm (24 hr - UTC Time Zone).
      Must not conflict with the preferred maintenance window.
      Must be at least 30 minutes'
    Type: String

  PreferredMaintenanceWindow:
    Description: 'The time range each week during which
      system maintenance can occur.
      Format ddd:hh:mm-ddd:hh:mm (24 hr - UTC Time Zone).
      Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
      Must not conflict with the preferred backup window.
      Must be at least 30 minutes'
    Type: String

  PubliclyAccessible:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Indicates whether or not the DB instance is
      publicly accessible.
      true - creates an instance with a publicly resolvable DNS name,
      which resolves to a public IP address.
      false - creates an internal instance with a DNS name
      that resolves to a private IP address.'
    Type: String

  StorageEncrypted:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Whether or not to encrypt the DB instance data at rest'
    Type: String

  StorageType:
    AllowedValues: ['standard', 'gp2', 'io1']
    Description: 'Specifies the storage type to be associated with
      the DB instance'
    Type: String

  VPCSecurityGroups:
    Description: 'List of VPC security group IDs for DB'
    Type: 'List<AWS::EC2::SecurityGroup::Id>'


Conditions:

  IopsSpecified: !Not
    - !Or
      - !Equals [!Ref Iops, '']
      - !Equals [!Ref Iops, 0]

  KmsKeySpecified: !Not
    - !Equals [!Ref KmsKeyId, '']

  SnapshotSpecified: !Not
    - !Or
      - !Equals [!Ref DBSnapshotIdentifier, '']
      - !Equals [!Ref DBSnapshotIdentifier, undefined]


Resources:

  RdsDatabaseInstance:
    Properties:
      AllocatedStorage: !Ref AllocatedStorage
      AllowMajorVersionUpgrade: !Ref AllowMajorVersionUpgrade
      AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
      BackupRetentionPeriod: !Ref BackupRetentionPeriod
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Ref DBInstanceIdentifier
      DBParameterGroupName: !Ref DBParameterGroupName
      DBSnapshotIdentifier: !If
        - SnapshotSpecified
        - !Ref DBSnapshotIdentifier
        - !Ref 'AWS::NoValue'
      DBSubnetGroupName: !Ref DBSubnetGroupName
      Engine: !Ref Engine
      EngineVersion: !Ref EngineVersion
      Iops: !If
        - IopsSpecified
        - !Ref Iops
        - !Ref 'AWS::NoValue'
      KmsKeyId: !If
        - KmsKeySpecified
        - !Ref KmsKeyId
        - !Ref 'AWS::NoValue'
      LicenseModel: !Ref LicenseModel
      MasterUserPassword: !Ref MasterUserPassword
      MasterUsername: !Ref MasterUsername
      MultiAZ: !Ref MultiAZ
      Port: !Ref Port
      PreferredBackupWindow: !Ref PreferredBackupWindow
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      PubliclyAccessible: !Ref PubliclyAccessible
      StorageEncrypted: !Ref StorageEncrypted
      StorageType: !Ref StorageType
      Tags:
        - {Key: Application, Value: !Ref Application}
        - {Key: Environment, Value: !Ref Environment}
        - {Key: Name, Value: !Ref DBInstanceIdentifier}
      VPCSecurityGroups: !Ref VPCSecurityGroups
    Type: AWS::RDS::DBInstance


Outputs:

  RdsDbInstanceEndpoint:
    Description: The endpoint address of the RDS DB instance
    Export: {'Name': !Sub '${AWS::StackName}-RdsDbInstanceEndpoint'}
    Value: !GetAtt RdsDatabaseInstance.Endpoint.Address

  RdsDbInstanceName:
    Description: The name of the RDS DB instance
    Export: {'Name': !Sub '${AWS::StackName}-RdsDbInstanceName'}
    Value: !Ref RdsDatabaseInstance

  RdsDbInstancePort:
    Description: The endpoint port of the RDS DB instance
    Export: {'Name': !Sub '${AWS::StackName}-RdsDbInstancePort'}
    Value: !GetAtt RdsDatabaseInstance.Endpoint.Port

  RdsMasterUsername:
    Description: The username of the master user
    Export: {'Name': !Sub '${AWS::StackName}-RdsMasterUsername'}
    Value: !Ref MasterUsername
