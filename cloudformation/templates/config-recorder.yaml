AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates an AWS Config Recorder

Parameters:
  KMSMasterKeyID:
    Description: KMS Master Key ID
    Type: String
    Default: aws/s3

Resources:
  AWSConfigRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "config.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "AWSConfigPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - cloudtrail:DescribeTrails
                  - ec2:Describe*
                  - config:Put*
                  - config:Get*
                  - config:List*
                  - config:Describe*
                  - cloudtrail:GetTrailStatus
                  - cloudtrail:ListTags
                  - iam:GetAccountAuthorizationDetails
                  - iam:GetAccountPasswordPolicy
                  - iam:GetAccountSummary
                  - iam:GetGroup
                  - iam:GetGroupPolicy
                  - iam:GetPolicy
                  - iam:GetPolicyVersion
                  - iam:GetRole
                  - iam:GetRolePolicy
                  - iam:GetUser
                  - iam:GetUserPolicy
                  - iam:ListAttachedGroupPolicies
                  - iam:ListAttachedRolePolicies
                  - iam:ListAttachedUserPolicies
                  - iam:ListEntitiesForPolicy
                  - iam:ListGroupPolicies
                  - iam:ListGroupsForUser
                  - iam:ListInstanceProfilesForRole
                  - iam:ListPolicyVersions
                  - iam:ListRolePolicies
                  - iam:ListUserPolicies
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancerPolicies
                  - elasticloadbalancing:DescribeTags
                  - acm:DescribeCertificate
                  - acm:ListCertificates
                  - acm:ListTagsForCertificate
                  - rds:DescribeDBInstances
                  - rds:DescribeDBSecurityGroups
                  - rds:DescribeDBSnapshotAttributes
                  - rds:DescribeDBSnapshots
                  - rds:DescribeDBSubnetGroups
                  - rds:DescribeEventSubscriptions
                  - rds:ListTagsForResource
                  - rds:DescribeDBClusters
                  - s3:GetAccelerateConfiguration
                  - s3:GetBucketAcl
                  - s3:GetBucketCORS
                  - s3:GetBucketLocation
                  - s3:GetBucketLogging
                  - s3:GetBucketNotification
                  - s3:GetBucketPolicy
                  - s3:GetBucketRequestPayment
                  - s3:GetBucketTagging
                  - s3:GetBucketVersioning
                  - s3:GetBucketWebsite
                  - s3:GetLifecycleConfiguration
                  - s3:GetReplicationConfiguration
                  - s3:ListAllMyBuckets
                  - s3:ListBucket
                  - s3:GetEncryptionConfiguration
                  - redshift:DescribeClusterParameterGroups
                  - redshift:DescribeClusterParameters
                  - redshift:DescribeClusterSecurityGroups
                  - redshift:DescribeClusterSnapshots
                  - redshift:DescribeClusterSubnetGroups
                  - redshift:DescribeClusters
                  - redshift:DescribeEventSubscriptions
                  - redshift:DescribeLoggingStatus
                  - dynamodb:DescribeLimits
                  - dynamodb:DescribeTable
                  - dynamodb:ListTables
                  - dynamodb:ListTagsOfResource
                  - cloudwatch:DescribeAlarms
                  - application-autoscaling:DescribeScalableTargets
                  - application-autoscaling:DescribeScalingPolicies
                  - autoscaling:DescribeAutoScalingGroups
                  - autoscaling:DescribeLaunchConfigurations
                  - autoscaling:DescribeLifecycleHooks
                  - autoscaling:DescribePolicies
                  - autoscaling:DescribeScheduledActions
                  - autoscaling:DescribeTags
                  - lambda:GetFunction
                  - lambda:GetPolicy
                  - lambda:ListFunctions
                  - lambda:GetAlias
                  - lambda:ListAliases
                  - waf-regional:GetWebACLForResource
                  - waf-regional:GetWebACL
                  - cloudfront:ListTagsForResource
                  - guardduty:ListDetectors
                  - guardduty:GetMasterAccount
                  - guardduty:GetDetector
                  - codepipeline:ListPipelines
                  - codepipeline:GetPipeline
                  - codepipeline:GetPipelineState
                Resource: "*"

  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'aws:kms'
              KMSMasterKeyID: !Ref KMSMasterKeyID
      VersioningConfiguration:
        Status: Enabled

  ConfigBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ConfigBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Sid: AWSConfigBucketPermissionsCheck
            Action:
              - 's3:GetBucketAcl'
            Resource:
              Fn::Join:
                - ''
                -
                  - 'arn:aws:s3:::'
                  -
                    Ref: ConfigBucket
            Principal:
              Service:
                - config.amazonaws.com
          - Effect: Allow
            Sid: AWSConfigBucketDelivery
            Action:
              - 's3:PutObject'
            Resource:
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: ConfigBucket
                  - "/*"
            Principal:
              Service:
                - config.amazonaws.com
            Condition:
              StringEquals:
                s3:x-amz-acl:
                  - bucket-owner-full-control

  DeliveryChannel:
    Type: AWS::Config::DeliveryChannel
    Properties:
      ConfigSnapshotDeliveryProperties:
        DeliveryFrequency: "Six_Hours"
      S3BucketName:
        Ref: ConfigBucket

  ConfigurationRecorder:
    Type: 'AWS::Config::ConfigurationRecorder'
    Properties:
      RecordingGroup:
        AllSupported: true
        IncludeGlobalResourceTypes: true
      RoleARN: !GetAtt AWSConfigRole.Arn

Outputs:
  AWSConfigRole:
    Description: AWSConfigRole
    Value: !Ref AWSConfigRole
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", AWSConfigRole]]

  ConfigurationRecorder:
    Description: ConfigurationRecorder
    Value: !Ref ConfigurationRecorder
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ConfigurationRecorder]]
