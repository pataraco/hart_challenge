{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Step 3 of 3: Create the Amazon EC2 instances for the Chef Server Quick Start.",
    "Parameters": {
        "KeyPairName": {
            "Description": "Public/private key pair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "SubnetId": {
            "Description": "VPC Subnet ID for EC2 Instances",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPC": {
            "Description": "VPC Id",
            "Type": "AWS::EC2::VPC::Id"
        },
        "RemoteAdminCIDR": {
            "Description": "CIDR Block or IP for SSH and RDP access",
            "Type": "String",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "AdminPassword": {
            "Description": "Password for the 'chefadmin' account used to sign into the Chef Management Console",
            "Type": "String",
            "NoEcho": "True"
        },
        "AdminEmailAddress": {
            "Description": "Email address for Chef Administrator",
            "Type": "String",
            "Default": "admin@localhost.internal"
        },
        "ChefNodes": {
            "Description": "Select the number of nodes you want to support.",
            "AllowedValues": [
                "CHEF"
            ],
            "Type": "String",
            "Default": "CHEF"
        },
        "IncludeDemoInstances": {
            "Description": "Set this value to 'true' to include a Chef workstation and demo node. For Chef Server only, set to 'false'",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Type": "String",
            "Default": "true"
        },
        "VPCCIDR": {
            "Description": "CIDR Block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        }
    },
    "Conditions": {
        "DemoInstances": { "Fn::Equals": [ { "Ref": "IncludeDemoInstances" }, "true" ] }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "US1404HVM": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20161020",
                "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.10.12",
                "CHEF": "public_aio_flexible_2016_09_12_16_32_47-e5be03d6-c6dd-4a77-ae5a-7895d845c720-ami-f8aedeef.3"
            },
            "ap-northeast-1": {
                "US1404HVM": "ami-c88325a9",
                "WS2012R2": "ami-7c449e1d"
            },
            "ap-northeast-2": {
                "US1404HVM": "ami-8ce236e2",
                "WS2012R2": "ami-4fd30721"
            },
            "ap-southeast-1": {
                "US1404HVM": "ami-1c2e887f",
                "WS2012R2": "ami-2b309748"
            },
            "ap-southeast-2": {
                "CHEF": "ami-9f1121fc",
                "US1404HVM": "ami-bf3d00dc",
                "WS2012R2": "ami-74043617"
            },
            "eu-central-1": {
                "US1404HVM": "ami-9c09f0f3",
                "WS2012R2": "ami-0c34ca63"
            },
            "eu-west-1": {
                "CHEF": "ami-268df655",
                "US1404HVM": "ami-1c4a046f",
                "WS2012R2": "ami-55084526"
            },
            "sa-east-1": {
                "US1404HVM": "ami-900b96fc",
                "WS2012R2": "ami-42ee732e"
            },
            "us-east-1": {
                "CHEF": "ami-cc5a23db",
                "US1404HVM": "ami-c8580bdf",
                "WS2012R2": "ami-3f0c4628"
            },
            "us-west-1": {
                "CHEF": "ami-bce7a8dc",
                "US1404HVM": "ami-61074c01",
                "WS2012R2": "ami-123c7472"
            },
            "us-west-2": {
                "CHEF": "ami-408c5020",
                "US1404HVM": "ami-01f05461",
                "WS2012R2": "ami-b871aad8"
            }
        }
    },
    "Resources": {
        "ChefServerEIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "ChefServer"
                }
            }
        },
        "WaitForChefServerInstall": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "ChefServer",
            "Properties": {
                "Handle": { "Ref": "WaitForChefServerWaitHandle" },
                "Timeout": "2700"
            }
        },
        "WaitForChefServerWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle",
            "Properties": {}
        },
        "ChefServer": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": { "Fn::FindInMap": [ "AWSAMIRegionMap", { "Ref": "AWS::Region" }, "CHEF" ] },
                "InstanceType": "t2.medium",
                "SubnetId": { "Ref": "SubnetId" },
                "Tags": [ { "Key": "Name", "Value": "ChefServer" } ],
                "BlockDeviceMappings": [{"DeviceName":"/dev/sda1","Ebs":{"VolumeSize":"50","VolumeType":"gp2"}}],
                "SecurityGroupIds": [ { "Ref": "ChefServerSecurityGroup" } ],
                "KeyName": { "Ref": "KeyPairName" },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "chef-server-ctl marketplace-setup -u chefadmin -f chefadmin -l p -e ", { "Ref": "AdminEmailAddress" }, " -o aws -p ", { "Ref": "AdminPassword" }, " -y", "\n",
                                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",\"Reason\" : \"Configuration Complete\",\"UniqueId\" : \"ChefServer\", \"Data\" : \"Done\"}' \"", { "Ref": "WaitForChefServerWaitHandle" }, "\"", "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "ChefWorkStation": {
            "Type": "AWS::EC2::Instance",
            "Condition": "DemoInstances",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "config": [
                            "setup"
                        ]
                    },
                    "setup": {
                        "files": {
                            "c:\\cfn\\cfn-hup.conf": {
                                "content": { "Fn::Join": [ "", [ "[main]\n", "stack=", { "Ref": "AWS::StackId" }, "\n", "region=", { "Ref": "AWS::Region" }, "\n" ] ] }
                            },
                            "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "[cfn-auto-reloader-hook]\n",
                                            "triggers=post.update\n",
                                            "path=Resources.ChefWorkStation.Metadata.AWS::CloudFormation::Init\n",
                                            "action=cfn-init.exe -v -s ",
                                            { "Ref": "AWS::StackId" },
                                            " -r ChefWorkStation",
                                            " --region ",
                                            { "Ref": "AWS::Region" },
                                            "\n"
                                        ]
                                    ]
                                }
                            },
                            "c:\\cfn\\scripts\\Unzip-Archive.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
                            },
                            "c:\\cfn\\modules\\AWSQuickStart.zip": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/microsoft-utilities/modules/AWSQuickStart.zip"
                            },
                            "c:\\cfn\\downloads\\chefdk-0.9.0-1-x86.msi": {
                                "source": "https://opscode-omnibus-packages.s3.amazonaws.com/windows/2008r2/i386/chefdk-0.9.0-1-x86.msi"
                            },
                            "c:\\cfn\\downloads\\Git-2.6.2-64-bit.exe": {
                                "source": "https://github.com/git-for-windows/git/releases/download/v2.6.2.windows.1/Git-2.6.2-64-bit.exe"
                            },
                            "c:\\cfn\\scripts\\git.inf": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/scripts/git.inf"
                            },
                            "c:\\cfn\\downloads\\default.rb": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/scripts/default.rb"
                            },
                            "c:\\cfn\\scripts\\New-LocalAdministrator.ps1": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/microsoft-utilities/scripts/New-LocalAdministrator.ps1"
                            },
                            "c:\\cfn\\downloads\\index.html": {
                                "source": "https://s3.amazonaws.com/quickstart-reference/chef/chef-server/latest/scripts/index.html"
                            },
                            "c:\\cfn\\downloads\\Win8.1AndW2K12R2-KB3134758-x64.msu": {
                                "source": "https://download.microsoft.com/download/2/C/6/2C6E1B4A-EBE5-48A6-B225-2D2058A9CEFB/Win8.1AndW2K12R2-KB3134758-x64.msu"
                            },
                            "c:/tools/ewmp.cmd": {
                                "content": "@ECHO OFF\nFOR /F \"tokens=3,*\" %%a IN ('REG QUERY \"HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\Environment\" /v PATH') DO PATH %%a%%b\n%*"
                            }
                        },
                        "commands": {
                            "a-set-execution-policy": {
                                "command": "powershell.exe -command Set-ExecutionPolicy RemoteSigned -Force",
                                "waitAfterCompletion": "0"
                            },
                            "b-unpack-quickstart-module": {
                                "command": "powershell.exe -command c:\\cfn\\scripts\\Unzip-Archive.ps1 -Source c:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                                "waitAfterCompletion": "0"
                            },
                            "c-init-quickstart-module": {
                                "command": "powershell.exe -command New-AWSQuickStartWaitHandle -Handle ChefWorkStation",
                                "waitAfterCompletion": "0"
                            },
                            "d-install-chefdk": {
                                "command": "powershell.exe -command Start-Process msiexec.exe '/i C:\\cfn\\downloads\\chefdk-0.9.0-1-x86.msi /qn' -NoNewWindow -Wait",
                                "waitAfterCompletion": "0"
                            },
                            "e-install-git": {
                                "command": "powershell.exe -command Start-Process c:\\cfn\\downloads\\Git-2.6.2-64-bit.exe '/VERYSILENT /LOADINF=c:\\cfn\\scripts\\git.inf' -NoNewWindow -Wait",
                                "waitAfterCompletion": "0"
                            },
                            "f-install-wmf5": {
                                "command": "wusa.exe c:\\cfn\\downloads\\Win8.1AndW2K12R2-KB3134758-x64.msu /quiet /forcerestart",
                                "waitAfterCompletion": "forever"
                            },
                            "g-install-chocolatey": {
                                "command": "powershell -Command \"Invoke-Expression ((New-Object Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\""
                            },
                            "h-install-notepad": {
                                "command": "c:\\tools\\ewmp.cmd choco install notepadplusplus.install --force -y"
                            },
                            "i-install-chrome": {
                                "command": "c:\\tools\\ewmp.cmd choco install googlechrome --force -y"
                            },
                            "j-new-admin": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command c:\\cfn\\scripts\\New-LocalAdministrator.ps1 -Name chefadmin -Password ",
                                            {
                                                "Ref": "AdminPassword"
                                            }
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                            "k-send-signal": {
                                "command": "powershell.exe -command Write-AWSQuickStartStatus",
                                "waitAfterCompletion": "0"
                            }
                        },
                        "services": {
                            "windows": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "c:\\cfn\\cfn-hup.conf",
                                        "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "WS2012R2"
                    ]
                },
                "InstanceType": "t2.medium",
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ChefWorkStation"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": "50",
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "ChefWorkStationSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -c config -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r ChefWorkStation",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>\n"
                            ]
                        ]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": "1",
                    "Timeout": "PT30M"
                }
            }
        },
        "ChefNode": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "US1404HVM"
                    ]
                },
                "InstanceType": "t2.medium",
                "SubnetId": {
                    "Ref": "SubnetId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "NODE"
                    }
                ],
                "SecurityGroupIds": [
                    {
                        "Ref": "ChefNodeSecurityGroup"
                    }
                ],
                "KeyName": {
                    "Ref": "KeyPairName"
                }
            }
        },
        "ChefServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH and HTTPS access to the Chef Server",
                "VpcId": { "Ref": "VPC" },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": { "Ref": "RemoteAdminCIDR" }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ChefWorkStationSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables RDP Access to the Chef WorkStation",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "RemoteAdminCIDR"
                        }
                    }
                ]
            }
        },
        "ChefNodeSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH and HTTP Access to the Chef Node",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAdminCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "VPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "ChefServerDnsName": {
            "Value": {
                "Fn::GetAtt": [
                    "ChefServer",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the Chef Server"
        },
        "ChefWorkStationDnsName": {
            "Value": {
                "Fn::GetAtt": [
                    "ChefWorkStation",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the Chef WorkStation"
        }
    }
}
