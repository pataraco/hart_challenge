---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an AWS CodeBuild Project from a GitHub source'


Parameters:

  ArtifactName:
    Default: ''
    Description: 'Along with ArtifactPath and ArtifactsUseBuildId, the pattern that AWS CodeBuild uses to name and store the output artifact'
    Type: String

  ArtifactPath:
    Default: ''
    Description: 'Along with ArtifactName and ArtifactsUseBuildId, the pattern that AWS CodeBuild uses to name and store the output artifact'
    Type: String

  ArtifactsBucket:
    Default: ''
    Description: 'If ArtifactsType is set to S3, this is the name of the output bucket'
    Type: String

  ArtifactsType:
    AllowedValues: ['CODEPIPELINE', 'NO_ARTIFACTS', 'S3']
    Default: 'NO_ARTIFACTS'
    Description: 'The type of build output artifact (default: NO_ARTIFACTS)'
    Type: String

  ArtifactsUseBuildId:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: 'Along with ArtifactName and ArtifactPath, the pattern that AWS CodeBuild uses to name and store the output artifact'
    Type: String

  BadgeEnabled:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: 'Indicates whether AWS CodeBuild generates a publicly accessible badge images URL for the project (default: false)'
    Type: String

  BuildSpec:
    Default: ''
    Description: 'The build specification for the project. If this value is not provided, then the source code must contain a buildspec file named buildspec.yml at the root level. If this value is provided, it can be either a single string containing the entire build specification, or the path to an alternate buildspec file'
    Type: String

  Description:
    Default: 'GitHub sourced CodeBuild project'
    Description: 'A description that makes the build project easy to identify'
    Type: String

  Environment:
    Description: 'Name of Environment'
    Type: String

  EnvironmentComputeType:
    AllowedValues: ['BUILD_GENERAL1_SMALL', 'BUILD_GENERAL1_MEDIUM', 'BUILD_GENERAL1_LARGE']
    Default: 'BUILD_GENERAL1_SMALL'
    Description: 'The type of compute environment which determines the memory and number of CPU cores the build environment uses. Available values include: BUILD_GENERAL1_SMALL (3 GB/2 vCPUs), BUILD_GENERAL1_MEDIUM (7 GB/4 vCPUs) or BUILD_GENERAL1_LARGE (15 GB/8 vCPUs). (default: BUILD_GENERAL1_SMALL)'
    Type: String

  EnvironmentImage:
    Default: 'aws/codebuild/amazonlinux2-x86_64-standard:1.0'
    Description: 'The image tag or image digest that identifies the Docker image to use for this build project. Use the following formats: registry/repository:tag or registry/repository@digest (e.g. aws/codebuild/standard:2.0) (default: aws/codebuild/amazonlinux2-x86_64-standard:1.0)'
    Type: String

  EnvironmentType:
    AllowedValues: ['ARM_CONTAINER', 'LINUX_CONTAINER', 'LINUX_GPU_CONTAINER', 'WINDOWS_CONTAINER']
    Default: 'LINUX_CONTAINER'
    Description: 'The type of build environment to use for related builds. (default: LINUX_CONTAINER)'
    Type: String

  EnvironmentVariable1:
    Default: ''
    Description: 'An environment variable setting (key=val) to assign to the project'
    Type: String

  EnvironmentVariable2:
    Default: ''
    Description: 'Another environment variable setting (key=val) to assign to the project'
    Type: String

  EnvironmentVariable3:
    Default: ''
    Description: 'Another environment variable setting (key=val) to assign to the project'
    Type: String

  EnvironmentVariable4:
    Default: ''
    Description: 'Another environment variable setting (key=val) to assign to the project'
    Type: String

  EnvironmentVariable5:
    Default: ''
    Description: 'Another environment variable setting (key=val) to assign to the project'
    Type: String

  GitCloneDepth:
    Default: 1
    Description: 'The depth of history to download. Minimum value is 0. If this value is 0, greater than 25, or not provided, then the full history is downloaded with each build project (default: 1)'
    MinValue: 0
    Type: Number

  GitHubLocation:
    Description: 'For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the build spec file. You must connect your AWS account to your GitHub account using the AWS CodeBuild console'
    Type: String

  Name:
    AllowedPattern: '[A-Za-z0-9][A-Za-z0-9\-_]{1,254}'
    Default: 'not-given'
    Description: 'The name of the build project. The name must be unique across all of the projects in your AWS account'
    MinLength: 1
    MaxLength: 254
    Type: String

  OverrideArtifactName:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: 'If set to true a name specified in the buildspec file overrides the artifact name. The name specified in a buildspec file is calculated at build time and uses the Shell command language. For example, you can append a date and time to your artifact name so that it is always unique (default: true)'
    Type: String

  Project:
    Default: ''
    Description: 'Name of the project being deployed'
    Type: String

  QueuedTimeoutInMinutes:
    Default: 480
    Description: 'The number of minutes a build is allowed to be queued before it times out. (default: 480 or 8 hours)'
    MinValue: 5
    MaxValue: 480
    Type: Number

  SourceVersion:
    Default: ''
    Description: "A version of the build input to be built for this project. If not specified, the latest version is used. If specified, for GitHub the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format pr/pull-request-ID (for example pr/25). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used"
    Type: String

  TimeoutInMinutes:
    Default: 60
    Description: 'How long, in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait before timing out any related build that did not get marked as completed. (default: 60 minutes)'
    MinValue: 5
    MaxValue: 480
    Type: Number

  ZipArtifacts:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: 'If ArtifactsType is set to S3, valid values include: false - AWS CodeBuild creates in the output bucket a folder that contains the build output.  true: AWS CodeBuild creates in the output bucket a ZIP file that contains the build output (default: true)'
    Type: String


Conditions:

  ArtifactNameGiven: !Not [!Equals [!Ref ArtifactName, '']]
  ArtifactPathGiven: !Not [!Equals [!Ref ArtifactPath, '']]
  ArtifactsUseBuildId: !Equals [!Ref ArtifactsUseBuildId, 'true']
  BuildSpecGiven: !Not [!Equals [!Ref BuildSpec, '']]
  EnvironmentVariable1Given: !Not [!Equals [!Ref EnvironmentVariable1, '']]
  EnvironmentVariable2Given: !Not [!Equals [!Ref EnvironmentVariable2, '']]
  EnvironmentVariable3Given: !Not [!Equals [!Ref EnvironmentVariable3, '']]
  EnvironmentVariable4Given: !Not [!Equals [!Ref EnvironmentVariable4, '']]
  EnvironmentVariable5Given: !Not [!Equals [!Ref EnvironmentVariable5, '']]
  GenerateArtifacts: !Not [!Equals [!Ref ArtifactsBucket, '']]
  NoArtifacts: !Equals [!Ref ArtifactsType, 'NO_ARTIFACTS']
  ProjectNameGiven: !Not [!Equals [!Ref Name, 'not-given']]
  SourceVersionGiven: !Not [!Equals [!Ref SourceVersion, '']]
  ZipArtifacts: !Equals [!Ref ZipArtifacts, 'true']


Resources:

  IamRoleCodeBuildService:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal: {Service: 'codebuild.amazonaws.com'}
      ManagedPolicyArns: ['arn:aws:iam::aws:policy/AdministratorAccess']
      Description: !Sub 'Allows CodeBuild to build/deploy resources for ${Project} ${Environment}'
      RoleName: !If
        - ProjectNameGiven
        - !Sub 'codebuild-${Name}-service-role'
        - !Sub 'codebuild-${Project}-${Environment}-service-role'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Location: !If [GenerateArtifacts, !Ref ArtifactsBucket, !Ref 'AWS::NoValue']
        Name: !If [ArtifactNameGiven, !Ref ArtifactName, !Ref 'AWS::NoValue']
        NamespaceType: !If
          - NoArtifacts
          - !Ref 'AWS::NoValue'
          - !If [ArtifactsUseBuildId, BUILD_ID, !Ref 'AWS::NoValue']
        OverrideArtifactName: !Ref OverrideArtifactName
        Packaging: !If
          - NoArtifacts
          - !Ref 'AWS::NoValue'
          - !If [ZipArtifacts, ZIP, !Ref 'AWS::NoValue']
        Path: !If [ArtifactPathGiven, !Ref ArtifactPath, !Ref 'AWS::NoValue']
        Type: !Ref ArtifactsType
      BadgeEnabled: !Ref BadgeEnabled
      Description: !Ref Description
      Environment: 
        ComputeType: !Ref EnvironmentComputeType
        EnvironmentVariables: 
          - !If
            - GenerateArtifacts
            - Name: ARTIFACTS_LOC
              Type: PLAINTEXT
              Value: !If
                - ArtifactPathGiven
                - !Sub '${ArtifactsBucket}/${ArtifactPath}'
                - !Sub '${ArtifactsBucket}'
            - !Ref 'AWS::NoValue'
          - !If
            - ArtifactNameGiven
            - Name: ARTIFACT_NAME
              Type: PLAINTEXT
              Value: !Ref ArtifactName
            - !Ref 'AWS::NoValue'
          - Name: ENVIRONMENT
            Type: PLAINTEXT
            Value: !Ref Environment
          - !If
            - EnvironmentVariable1Given
            - Name: !Select [0, !Split ["=", !Ref EnvironmentVariable1]]
              Value: !Select [1, !Split ["=", !Ref EnvironmentVariable1]]
            - !Ref 'AWS::NoValue'
          - !If
            - EnvironmentVariable2Given
            - Name: !Select [0, !Split ["=", !Ref EnvironmentVariable2]]
              Value: !Select [1, !Split ["=", !Ref EnvironmentVariable2]]
            - !Ref 'AWS::NoValue'
          - !If
            - EnvironmentVariable3Given
            - Name: !Select [0, !Split ["=", !Ref EnvironmentVariable3]]
              Value: !Select [1, !Split ["=", !Ref EnvironmentVariable3]]
            - !Ref 'AWS::NoValue'
          - !If
            - EnvironmentVariable4Given
            - Name: !Select [0, !Split ["=", !Ref EnvironmentVariable4]]
              Value: !Select [1, !Split ["=", !Ref EnvironmentVariable4]]
            - !Ref 'AWS::NoValue'
          - !If
            - EnvironmentVariable5Given
            - Name: !Select [0, !Split ["=", !Ref EnvironmentVariable5]]
              Value: !Select [1, !Split ["=", !Ref EnvironmentVariable5]]
            - !Ref 'AWS::NoValue'
        Image: !Ref EnvironmentImage
        ImagePullCredentialsType: CODEBUILD
        Type: !Ref EnvironmentType
      LogsConfig: 
        CloudWatchLogs:
          Status: ENABLED
      Name: !If [ProjectNameGiven, !Ref Name, !Sub '${Project}-${Environment}']
      QueuedTimeoutInMinutes: !Ref QueuedTimeoutInMinutes
      ServiceRole: !Ref IamRoleCodeBuildService
      Source: 
        BuildSpec: !If [BuildSpecGiven, !Ref BuildSpec, !Ref 'AWS::NoValue']
        GitCloneDepth: !Ref GitCloneDepth
        Location: !Ref GitHubLocation
        ReportBuildStatus: true
        SourceIdentifier: String
        Type: GITHUB
      SourceVersion: !If [SourceVersionGiven, !Ref SourceVersion, !Ref 'AWS::NoValue']
      Tags:
        - Key: Name
          Value: !If [ProjectNameGiven, !Ref Name, !Sub '${Project}-${Environment}']
        # as of 09-jan-2020, CloudFormation tags aren't propagated for this resource type
        - {Key: Project, Value: !Ref Project}
        - {Key: Environment, Value: !Ref Environment}
        - {Key: Provisioner, Value: CloudFormation}
      TimeoutInMinutes: !Ref TimeoutInMinutes


Outputs:

  CodeBuildProjectName:
    Description: 'The name of the CodeBuild Project'
    Export: {'Name': !Sub '${AWS::StackName}-CodeBuildProjectName'}
    Value: !Ref CodeBuildProject

  CodeBuildProjectArn:
    Description: 'The ARN of the CodeBuild Project'
    Export: {'Name': !Sub '${AWS::StackName}-CodeBuildProjectArn'}
    Value: !GetAtt CodeBuildProject.Arn
